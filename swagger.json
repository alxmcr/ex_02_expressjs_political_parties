{
  "openapi": "3.0.0",
  "info": {
    "title": "Political Parties API",
    "version": "1.0.0",
    "description": "API for managing political parties"
  },
  "servers": [
    {
      "url": "http://localhost:5500",
      "description": "[Dev] Local Server"
    },
    {
      "url": "https://ex-02-expressjs-political-parties.onrender.com",
      "description": "[Prod] Render Server"
    }
  ],
  "paths": {
    "/api/status/ping": {
      "get": {
        "summary": "Ping the server",
        "responses": {
          "200": {
            "description": "Pong!"
          }
        }
      }
    },
    "/api/political-parties": {
      "get": {
        "summary": "Get all political parties",
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "// Using fetch\nfetch('http://localhost:5500/api/political-parties')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n\n// Using axios\naxios.get('http://localhost:5500/api/political-parties')\n  .then(response => console.log(response.data))\n  .catch(error => console.error('Error:', error));"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of political parties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoliticalParty"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new political party",
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "// Using fetch\nconst newParty = {\n  name: 'New Democratic Party',\n  abbreviation: 'NDP',\n  founded_date: '1961-08-03',\n  ideology: 'Social Democracy',\n  leader: 'Jagmeet Singh',\n  headquarters: 'Ottawa, Ontario',\n  website: 'https://www.ndp.ca'\n};\n\nfetch('http://localhost:5500/api/political-parties', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(newParty)\n})\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n\n// Using axios\naxios.post('http://localhost:5500/api/political-parties', newParty)\n  .then(response => console.log(response.data))\n  .catch(error => console.error('Error:', error));"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PoliticalParty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Political party successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoliticalParty"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/political-parties/{id}": {
      "get": {
        "summary": "Get a political party by ID",
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "// Using fetch\nconst partyId = 1;\nfetch(`http://localhost:5500/api/political-parties/${partyId}`)\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n\n// Using axios\naxios.get(`http://localhost:5500/api/political-parties/${partyId}`)\n  .then(response => console.log(response.data))\n  .catch(error => console.error('Error:', error));"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "A political party",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PoliticalParty" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a political party",
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "// Using fetch\nconst partyId = 1;\nconst updatedParty = {\n  name: 'Updated Party Name',\n  abbreviation: 'UPN',\n  founded_date: '2024-01-01',\n  ideology: 'Updated Ideology',\n  leader: 'New Leader',\n  headquarters: 'New Location',\n  website: 'https://www.updated-party.com'\n};\n\nfetch(`http://localhost:5500/api/political-parties/${partyId}`, {\n  method: 'PUT',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(updatedParty)\n})\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n\n// Using axios\naxios.put(`http://localhost:5500/api/political-parties/${partyId}`, updatedParty)\n  .then(response => console.log(response.data))\n  .catch(error => console.error('Error:', error));"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ]
      },
      "delete": {
        "summary": "Delete a political party",
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "// Using fetch\nconst partyId = 1;\nfetch(`http://localhost:5500/api/political-parties/${partyId}`, {\n  method: 'DELETE'\n})\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n\n// Using axios\naxios.delete(`http://localhost:5500/api/political-parties/${partyId}`)\n  .then(response => console.log(response.data))\n  .catch(error => console.error('Error:', error));"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PoliticalParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "founded_date": {
            "type": "string"
          },
          "ideology": {
            "type": "string"
          },
          "leader": {
            "type": "string"
          },
          "headquarters": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      }
    }
  }
}
